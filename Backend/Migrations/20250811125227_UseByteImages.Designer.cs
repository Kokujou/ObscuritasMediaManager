// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ObscuritasMediaManager.Backend.DataRepositories;

#nullable disable

namespace ObscuritasMediaManager.Backend.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20250811125227_UseByteImages")]
    partial class UseByteImages
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("MediaGenreMapping", b =>
                {
                    b.Property<Guid>("GenreId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MediaId")
                        .HasColumnType("TEXT");

                    b.HasKey("GenreId", "MediaId");

                    b.HasIndex("MediaId");

                    b.ToTable("MediaGenreMapping");
                });

            modelBuilder.Entity("ObscuritasMediaManager.Backend.Models.FoodImageModel", b =>
                {
                    b.Property<Guid>("RecipeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("ImageData")
                        .HasColumnType("BLOB");

                    b.Property<string>("ImageHash")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.Property<string>("MimeType")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("ThumbData")
                        .HasColumnType("BLOB");

                    b.HasKey("RecipeId");

                    b.HasIndex("ImageHash")
                        .IsUnique();

                    b.ToTable("FoodImageMapping");
                });

            modelBuilder.Entity("ObscuritasMediaManager.Backend.Models.FoodTagModel", b =>
                {
                    b.Property<Guid>("RecipeId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Key")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("RecipeId", "Key", "Value");

                    b.ToTable("FoodTagMapping");
                });

            modelBuilder.Entity("ObscuritasMediaManager.Backend.Models.GenreModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("GenreModel");
                });

            modelBuilder.Entity("ObscuritasMediaManager.Backend.Models.IngredientModel", b =>
                {
                    b.Property<string>("IngredientName")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsFluid")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LowestKnownPrice")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nation")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IngredientName");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("ObscuritasMediaManager.Backend.Models.InstrumentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Instruments");
                });

            modelBuilder.Entity("ObscuritasMediaManager.Backend.Models.MediaGenreModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("TEXT");

                    b.Property<string>("Section")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("MediaGenres");
                });

            modelBuilder.Entity("ObscuritasMediaManager.Backend.Models.MediaModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Complete")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ContentWarnings")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Deleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(9999)
                        .HasColumnType("TEXT");

                    b.Property<string>("EnglishName")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("GermanName")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("KanjiName")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("Rating")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Release")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RomajiName")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("RootFolderPath")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TargetGroup")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Media");
                });

            modelBuilder.Entity("ObscuritasMediaManager.Backend.Models.MusicInstrumentMappingModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("InstrumentId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TrackHash")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("InstrumentId");

                    b.HasIndex("TrackHash");

                    b.ToTable("MusicInstrumentMapping");
                });

            modelBuilder.Entity("ObscuritasMediaManager.Backend.Models.MusicModel", b =>
                {
                    b.Property<string>("Hash")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Author")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<bool>("Complete")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Deleted")
                        .HasColumnType("INTEGER");

                    b.Property<long>("FileBytes")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Genres")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Instrumentation")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Lyrics")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Mood1")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Mood2")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Participants")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<byte>("Rating")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Source")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Hash");

                    b.ToTable("Music");
                });

            modelBuilder.Entity("ObscuritasMediaManager.Backend.Models.PlaylistModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Author")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<bool>("Complete")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Genres")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nation")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<byte>("Rating")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Playlists");
                });

            modelBuilder.Entity("ObscuritasMediaManager.Backend.Models.PlaylistTrackMappingModel", b =>
                {
                    b.Property<Guid>("PlaylistId")
                        .HasColumnType("TEXT");

                    b.Property<string>("TrackHash")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PlaylistName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("TrackName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("PlaylistId", "TrackHash");

                    b.HasIndex("TrackHash");

                    b.ToTable("PlaylistTrackMapping");
                });

            modelBuilder.Entity("ObscuritasMediaManager.Backend.Models.RecipeCookwareMappingModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RecipeId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.ToTable("Cookware");
                });

            modelBuilder.Entity("ObscuritasMediaManager.Backend.Models.RecipeIngredientMappingModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<float>("Amount")
                        .HasColumnType("REAL");

                    b.Property<string>("Description")
                        .HasMaxLength(9999)
                        .HasColumnType("TEXT");

                    b.Property<string>("GroupName")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("IngredientName")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("RecipeId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IngredientName");

                    b.HasIndex("RecipeId");

                    b.ToTable("RecipeIngredientMapping");
                });

            modelBuilder.Entity("ObscuritasMediaManager.Backend.Models.RecipeModelBase", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Deleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("Difficulty")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Rating")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Recipes");

                    b.HasDiscriminator<string>("Type").HasValue("RecipeModelBase");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("ObscuritasMediaManager.Backend.Models.UserModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ObscuritasMediaManager.Backend.Models.UserSettingsModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("MediaFilter")
                        .HasMaxLength(9999)
                        .HasColumnType("TEXT");

                    b.Property<string>("MusicFilter")
                        .HasMaxLength(9999)
                        .HasColumnType("TEXT");

                    b.Property<int>("Volume")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("UserSettings");
                });

            modelBuilder.Entity("ObscuritasMediaManager.Backend.Models.FoodModel", b =>
                {
                    b.HasBaseType("ObscuritasMediaManager.Backend.Models.RecipeModelBase");

                    b.ToTable("Recipes");

                    b.HasDiscriminator().HasValue("Food");
                });

            modelBuilder.Entity("ObscuritasMediaManager.Backend.Models.RecipeModel", b =>
                {
                    b.HasBaseType("ObscuritasMediaManager.Backend.Models.RecipeModelBase");

                    b.Property<TimeSpan>("CookingTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("FormattedText")
                        .HasMaxLength(9999)
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan>("PreparationTime")
                        .HasColumnType("TEXT");

                    b.ToTable("Recipes");

                    b.HasDiscriminator().HasValue("Recipe");
                });

            modelBuilder.Entity("MediaGenreMapping", b =>
                {
                    b.HasOne("ObscuritasMediaManager.Backend.Models.MediaGenreModel", null)
                        .WithMany()
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ObscuritasMediaManager.Backend.Models.MediaModel", null)
                        .WithMany()
                        .HasForeignKey("MediaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ObscuritasMediaManager.Backend.Models.FoodTagModel", b =>
                {
                    b.HasOne("ObscuritasMediaManager.Backend.Models.RecipeModelBase", null)
                        .WithMany("Tags")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ObscuritasMediaManager.Backend.Models.MusicInstrumentMappingModel", b =>
                {
                    b.HasOne("ObscuritasMediaManager.Backend.Models.InstrumentModel", null)
                        .WithMany()
                        .HasForeignKey("InstrumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ObscuritasMediaManager.Backend.Models.MusicModel", null)
                        .WithMany()
                        .HasForeignKey("TrackHash")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ObscuritasMediaManager.Backend.Models.PlaylistTrackMappingModel", b =>
                {
                    b.HasOne("ObscuritasMediaManager.Backend.Models.PlaylistModel", "Playlist")
                        .WithMany("TrackMappings")
                        .HasForeignKey("PlaylistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ObscuritasMediaManager.Backend.Models.MusicModel", "Track")
                        .WithMany()
                        .HasForeignKey("TrackHash")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Playlist");

                    b.Navigation("Track");
                });

            modelBuilder.Entity("ObscuritasMediaManager.Backend.Models.RecipeCookwareMappingModel", b =>
                {
                    b.HasOne("ObscuritasMediaManager.Backend.Models.RecipeModel", null)
                        .WithMany("Cookware")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ObscuritasMediaManager.Backend.Models.RecipeIngredientMappingModel", b =>
                {
                    b.HasOne("ObscuritasMediaManager.Backend.Models.IngredientModel", "Ingredient")
                        .WithMany()
                        .HasForeignKey("IngredientName")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("ObscuritasMediaManager.Backend.Models.RecipeModel", null)
                        .WithMany("Ingredients")
                        .HasForeignKey("RecipeId");

                    b.OwnsOne("ObscuritasMediaManager.Backend.Models.MeasurementUnit", "Unit", b1 =>
                        {
                            b1.Property<Guid>("RecipeIngredientMappingModelId")
                                .HasColumnType("TEXT");

                            b1.Property<int>("Measurement")
                                .HasColumnType("INTEGER");

                            b1.Property<float>("Multiplier")
                                .HasColumnType("REAL");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(255)
                                .HasColumnType("TEXT");

                            b1.Property<string>("ShortName")
                                .IsRequired()
                                .HasMaxLength(10)
                                .HasColumnType("TEXT");

                            b1.HasKey("RecipeIngredientMappingModelId");

                            b1.ToTable("RecipeIngredientMapping");

                            b1.WithOwner()
                                .HasForeignKey("RecipeIngredientMappingModelId");
                        });

                    b.Navigation("Ingredient");

                    b.Navigation("Unit")
                        .IsRequired();
                });

            modelBuilder.Entity("ObscuritasMediaManager.Backend.Models.RecipeModelBase", b =>
                {
                    b.HasOne("ObscuritasMediaManager.Backend.Models.FoodImageModel", "Image")
                        .WithMany()
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Image");
                });

            modelBuilder.Entity("ObscuritasMediaManager.Backend.Models.PlaylistModel", b =>
                {
                    b.Navigation("TrackMappings");
                });

            modelBuilder.Entity("ObscuritasMediaManager.Backend.Models.RecipeModelBase", b =>
                {
                    b.Navigation("Tags");
                });

            modelBuilder.Entity("ObscuritasMediaManager.Backend.Models.RecipeModel", b =>
                {
                    b.Navigation("Cookware");

                    b.Navigation("Ingredients");
                });
#pragma warning restore 612, 618
        }
    }
}
