// @ts-nocheck

'use strict';
/* tslint:disable */
/* eslint-disable */
//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.10.9.0 (NJsonSchema v10.4.1.0 (Newtonsoft.Json v12.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------
// ReSharper disable InconsistentNaming
var __extends =
    (this && this.__extends) ||
    (function () {
        var extendStatics = function (d, b) {
            extendStatics =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                    function (d, b) {
                        d.__proto__ = b;
                    }) ||
                function (d, b) {
                    for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
                };
            return extendStatics(d, b);
        };
        return function (d, b) {
            extendStatics(d, b);
            function __() {
                this.constructor = d;
            }
            d.prototype = b === null ? Object.create(b) : ((__.prototype = b.prototype), new __());
        };
    })();
var __decorate =
    (this && this.__decorate) ||
    function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
            d;
        if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function') r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
var __param =
    (this && this.__param) ||
    function (paramIndex, decorator) {
        return function (target, key) {
            decorator(target, key, paramIndex);
        };
    };
Object.defineProperty(exports, '__esModule', { value: true });
exports.SwaggerException = exports.GenreClient = exports._BACKEND_API_BASE_URL = exports.OBSCURITAS_MEDIA_MANAGER = void 0;
var operators_1 = require('rxjs/operators');
var rxjs_1 = require('rxjs');
var core_1 = require('@angular/core');
var http_1 = require('@angular/common/http');
exports._BACKEND_API_BASE_URL = new core_1.InjectionToken('OBSCURITAS_MEDIA_MANAGER._BACKEND_API_BASE_URL');
var GenreClient = /** @class */ (function () {
    function GenreClient(http, baseUrl) {
        this.jsonParseReviver = undefined;
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : '';
    }
    GenreClient.prototype.getAll = function () {
        var _this = this;
        var url_ = this.baseUrl + '/api/Genre';
        url_ = url_.replace(/[?&]$/, '');
        var options_ = {
            observe: 'response',
            responseType: 'blob',
            headers: new http_1.HttpHeaders({
                Accept: 'application/octet-stream',
            }),
        };
        return this.http
            .request('get', url_, options_)
            .pipe(
                operators_1.mergeMap(function (response_) {
                    return _this.processGetAll(response_);
                })
            )
            .pipe(
                operators_1.catchError(function (response_) {
                    if (response_ instanceof http_1.HttpResponseBase) {
                        try {
                            return _this.processGetAll(response_);
                        } catch (e) {
                            return rxjs_1.throwError(e);
                        }
                    } else return rxjs_1.throwError(response_);
                })
            );
    };
    GenreClient.prototype.processGetAll = function (response) {
        var status = response.status;
        var responseBlob =
            response instanceof http_1.HttpResponse ? response.body : response.error instanceof Blob ? response.error : undefined;
        var _headers = {};
        if (response.headers) {
            for (var _i = 0, _a = response.headers.keys(); _i < _a.length; _i++) {
                var key = _a[_i];
                _headers[key] = response.headers.get(key);
            }
        }
        if (status === 200 || status === 206) {
            var contentDisposition = response.headers ? response.headers.get('content-disposition') : undefined;
            var fileNameMatch = contentDisposition ? /filename="?([^"]*?)"?(;|$)/g.exec(contentDisposition) : undefined;
            var fileName = fileNameMatch && fileNameMatch.length > 1 ? fileNameMatch[1] : undefined;
            return rxjs_1.of({ fileName: fileName, data: responseBlob, status: status, headers: _headers });
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(
                operators_1.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                })
            );
        }
        return rxjs_1.of(null);
    };
    GenreClient = __decorate(
        [
            core_1.Injectable({
                providedIn: 'root',
            }),
            __param(0, core_1.Inject(http_1.HttpClient)),
            __param(1, core_1.Optional()),
            __param(1, core_1.Inject(exports.OBSCURITAS_MEDIA_MANAGER._BACKEND_API_BASE_URL)),
        ],
        GenreClient
    );
    return GenreClient;
})();
exports.GenreClient = GenreClient;
var SwaggerException = /** @class */ (function (_super) {
    __extends(SwaggerException, _super);
    function SwaggerException(message, status, response, headers, result) {
        var _this = _super.call(this) || this;
        _this.isSwaggerException = true;
        _this.message = message;
        _this.status = status;
        _this.response = response;
        _this.headers = headers;
        _this.result = result;
        return _this;
    }
    SwaggerException.isSwaggerException = function (obj) {
        return obj.isSwaggerException === true;
    };
    return SwaggerException;
})(Error);
exports.SwaggerException = SwaggerException;
function throwException(message, status, response, headers, result) {
    if (result !== null && result !== undefined) return rxjs_1.throwError(result);
    else return rxjs_1.throwError(new SwaggerException(message, status, response, headers, null));
}
function blobToText(blob) {
    return new rxjs_1.Observable(function (observer) {
        if (!blob) {
            observer.next('');
            observer.complete();
        } else {
            var reader = new FileReader();
            reader.onload = function (event) {
                observer.next(event.target.result);
                observer.complete();
            };
            reader.readAsText(blob);
        }
    });
}
