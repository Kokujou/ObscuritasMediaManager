@using System.Text.RegularExpressions;
@inherits ElementBase

@typeparam T


<div id="drop-down" disabled="@disabled" style="display:inline-block">
    <div class="dropdown"
    @onclick="@(() => {
            showDropdown = !showDropdown;
            if (useSearch) searchFilter = string.Empty;
        })">
        <div id="caption-container">
            @(caption)
            @if (!string.IsNullOrEmpty(caption))
            {
                <div id="empty-text-placeholder">empty</div>
            }
        </div>
    <div class="options"
         style="max-height: @(MaxHeight)px;"
         hidden="@(!showDropdown)"
    @onclick:stopPropagation
    @onscroll:preventDefault>
        @if (useSearch)
        {
            <div @onclick:preventDefault @onclick:stopPropagation>
                <input tabindex="1"
                       type="text"
                       placeholder="Suchtext eingeben..."
                       id="dropdown-search"
                @oninput="@((e) => searchFilter = (string)e.Value!)"
                @onchange="@((e) => searchFilter = (string)e.Value!)">
            </div>
        }
        @foreach (var option in options.Where((x) => new Regex(searchFilter, RegexOptions.IgnoreCase).IsMatch(x.text)))
        {
            <div selected="@(option.state != CheckboxState.Forbid)"
                 class="option"
            @onclick="@(() => changeOptionState(option, option.state == CheckboxState.Ignore ? CheckboxState.Forbid : CheckboxState.Ignore))">
                @if (multiselect && useToggle)
                {
                    <div class="label">@(option.text)</div>
                    <CustomToggle Color="@option.color"
                                  state="@(option.state)"
                                  threeValues="@(threeValues)"
                                  Toggled="@((e) => changeOptionState(option, e))"></CustomToggle>
                }
                else
                {
                    @option.text
                }
            </div>
        }
        </div>
    </div>
    <div class="dropdown-icon-container @(showDropdown ? "dropped-down" : "")">></div>
</div>